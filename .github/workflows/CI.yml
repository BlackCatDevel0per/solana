name: CI

on:
  pull_request:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'

jobs:
  create-release:
    name: deploy
    runs-on: ubuntu-latest
    strategy: 
      matrix:
        target: [aarch64-unknown-linux-gnu]
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install dependencies
        run: | 
          sudo dpkg --add-architecture arm64 && \
          sudo echo '# source urls for arm64 \n\
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ xenial main \n\
          deb-src [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ xenial main \n\
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ xenial-updates main \n\
          deb-src [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ xenial-updates main \n\
          deb [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ xenial-security main \n\
          deb-src [arch=arm64] http://ports.ubuntu.com/ubuntu-ports/ xenial-security main \n # end arm64 section' >> /etc/apt/sources.list &&\
          sudo sed -r 's/deb h/deb \[arch=amd64\] h/g' /etc/apt/sources.list > /tmp/sources-tmp.list && \
          sudo cp /tmp/sources-tmp.list /etc/apt/sources.list&& \
          sudo sed -r 's/deb-src h/deb-src \[arch=amd64\] h/g' /etc/apt/sources.list > /tmp/sources-tmp.list&&cat /etc/apt/sources.list &&\
          sudo cp /tmp/sources-tmp.list /etc/apt/sources.list&& echo "next"&&cat /etc/apt/sources.list && \
          sudo apt-get -y update && \
          sudo apt-get upgrade -y && \
          sudo apt-get install -y --no-install-recommends \
            curl make cmake file ca-certificates  \
            g++ gcc-aarch64-linux-gnu g++-aarch64-linux-gnu \
            libc6-dev-arm64-cross binutils-aarch64-linux-gnu \
            libudev-dev libudev-dev:arm64 && \
          sudo apt-get clean

      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}

      - name: Package
        shell: bash
        run: |
          # TODO:
          # strip target/${{ matrix.target }}/release/rust-ci

          cd target/${{ matrix.target }}/release          
          tar czvf ../../../solana-${{ matrix.target }}.tar.gz solana
          cd -
          
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
            files: 'solana*'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        
